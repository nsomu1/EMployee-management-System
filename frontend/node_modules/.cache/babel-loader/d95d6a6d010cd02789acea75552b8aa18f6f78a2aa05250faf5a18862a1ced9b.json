{"ast":null,"code":"var _class;\nimport axios from 'axios';\nconst BASE_URL = \"http://localhost:8080/api/departments\";\nclass DepartmentService {\n  constructor() {\n    this.getAllDepartments = async () => {\n      const response = await fetch(BASE_URL);\n      return response.json();\n    };\n    this.getDepartmentById = async id => {\n      const response = await fetch(`${BASE_URL}/${id}`);\n      return response.json();\n    };\n    this.createDepartment = async department => {\n      const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(department)\n      });\n      return response.json();\n    };\n    this.updateDepartment = async (id, department) => {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(department)\n      });\n      return response.json();\n    };\n    this.deleteDepartment = async id => {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      return response.json();\n    };\n  }\n  static getInstance() {\n    return this.instance;\n  }\n  getAllDepartments() {\n    return axios.get(BASE_URL);\n  }\n  getEmployees() {\n    return axios.get(EMPLOYEE_API_BASE_URL);\n  }\n  createEmployee(employee) {\n    return axios.post(EMPLOYEE_API_BASE_URL, employee);\n  }\n  getEmployeeById(employeeId) {\n    return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n  }\n  updateEmployee(employee, employeeId) {\n    return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n  }\n  deleteEmployee(employeeId) {\n    return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n  }\n}\n_class = DepartmentService;\nDepartmentService.instance = new _class();\nexport default DepartmentService.getInstance();","map":{"version":3,"names":["axios","BASE_URL","DepartmentService","constructor","getAllDepartments","response","fetch","json","getDepartmentById","id","createDepartment","department","method","headers","body","JSON","stringify","updateDepartment","deleteDepartment","getInstance","instance","get","getEmployees","EMPLOYEE_API_BASE_URL","createEmployee","employee","post","getEmployeeById","employeeId","updateEmployee","put","deleteEmployee","delete","_class"],"sources":["/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/services/DepartmentService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"http://localhost:8080/api/departments\";\n\nclass DepartmentService {\n\n    static instance = new DepartmentService();\n    static getInstance() {\n        return this.instance;\n    }\n    getAllDepartments = async () => {\n        const response = await fetch(BASE_URL);\n        return response.json();\n    };\n    getAllDepartments(){\n        return axios.get(BASE_URL);\n    }\n    \n    getDepartmentById = async (id) => {\n        const response = await fetch(`${BASE_URL}/${id}`);\n        return response.json();\n    };\n    \n    createDepartment = async (department) => {\n        const response = await fetch(BASE_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(department),\n        });\n        return response.json();\n    };\n    \n    updateDepartment = async (id, department) => {\n        const response = await fetch(`${BASE_URL}/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(department),\n        });\n        return response.json();\n    };\n    \n    deleteDepartment = async (id) => {\n        const response = await fetch(`${BASE_URL}/${id}`, {\n            method: 'DELETE',\n        });\n        return response.json();\n    };\n    \n    getEmployees(){\n        return axios.get(EMPLOYEE_API_BASE_URL);\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n\n    updateEmployee(employee, employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n}\n\nexport default DepartmentService.getInstance();"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,MAAMC,iBAAiB,CAAC;EAAAC,YAAA;IAAA,KAMpBC,iBAAiB,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,CAAC;MACtC,OAAOI,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAKDC,iBAAiB,GAAG,MAAOC,EAAE,IAAK;MAC9B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,IAAGQ,EAAG,EAAC,CAAC;MACjD,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDG,gBAAgB,GAAG,MAAOC,UAAU,IAAK;MACrC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,EAAE;QACnCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;MACnC,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDU,gBAAgB,GAAG,OAAOR,EAAE,EAAEE,UAAU,KAAK;MACzC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,IAAGQ,EAAG,EAAC,EAAE;QAC9CG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU;MACnC,CAAC,CAAC;MACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDW,gBAAgB,GAAG,MAAOT,EAAE,IAAK;MAC7B,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,IAAGQ,EAAG,EAAC,EAAE;QAC9CG,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC;EAAA;EA3CD,OAAOY,WAAWA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,QAAQ;EACxB;EAKAhB,iBAAiBA,CAAA,EAAE;IACf,OAAOJ,KAAK,CAACqB,GAAG,CAACpB,QAAQ,CAAC;EAC9B;EAoCAqB,YAAYA,CAAA,EAAE;IACV,OAAOtB,KAAK,CAACqB,GAAG,CAACE,qBAAqB,CAAC;EAC3C;EAEAC,cAAcA,CAACC,QAAQ,EAAC;IACpB,OAAOzB,KAAK,CAAC0B,IAAI,CAACH,qBAAqB,EAAEE,QAAQ,CAAC;EACtD;EAEAE,eAAeA,CAACC,UAAU,EAAC;IACvB,OAAO5B,KAAK,CAACqB,GAAG,CAACE,qBAAqB,GAAG,GAAG,GAAGK,UAAU,CAAC;EAC9D;EAEAC,cAAcA,CAACJ,QAAQ,EAAEG,UAAU,EAAC;IAChC,OAAO5B,KAAK,CAAC8B,GAAG,CAACP,qBAAqB,GAAG,GAAG,GAAGK,UAAU,EAAEH,QAAQ,CAAC;EACxE;EAEAM,cAAcA,CAACH,UAAU,EAAC;IACtB,OAAO5B,KAAK,CAACgC,MAAM,CAACT,qBAAqB,GAAG,GAAG,GAAGK,UAAU,CAAC;EACjE;AACJ;AAACK,MAAA,GAnEK/B,iBAAiB;AAAjBA,iBAAiB,CAEZkB,QAAQ,GAAG,IAAIlB,MAAiB,CAAC,CAAC;AAmE7C,eAAeA,iBAAiB,CAACiB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}