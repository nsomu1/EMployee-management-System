{"ast":null,"code":"var _jsxFileName = \"/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/components/Department/EmployeeListByDepartmentComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EmployeeService from '../../services/EmployeeService';\nimport DepartmentService from '../../services/DepartmentService';\nimport './EmployeeListByDepartmentComponent.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeListByDepartmentComponent = () => {\n  _s();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortField, setSortField] = useState('firstName');\n  useEffect(() => {\n    // Fetch the list of departments\n    DepartmentService.getAllDepartments().then(res => {\n      setDepartments(res.data || []);\n    }).catch(error => {\n      console.error('Error fetching departments:', error);\n      setDepartments([]);\n    });\n  }, []);\n  const handleDepartmentChange = event => {\n    const selectedDepartmentId = event.target.value;\n    setSelectedDepartment(selectedDepartmentId);\n\n    // Fetch employees based on the selected department\n    EmployeeService.getEmployeesByDepartment(selectedDepartmentId).then(res => {\n      setEmployees(res.data || []);\n    }).catch(error => {\n      console.error('Error fetching employees by department:', error);\n      setEmployees([]);\n    });\n  };\n  const handleSort = field => {\n    if (sortField === field) {\n      // If clicking on the same field, toggle the sort order\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If clicking on a different field, update the field and set the default sort order to 'asc'\n      setSortField(field);\n      setSortOrder('asc');\n    }\n  };\n  const renderSortingArrow = field => {\n    if (sortField !== field) {\n      return null; // Don't display the arrow if it's not the current sorting field\n    }\n    return sortOrder === 'asc' ? ' ↑' : ' ↓';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List by Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"department-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDepartment,\n        onChange: handleDepartmentChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: department.id,\n          children: department.name\n        }, department.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleSort('firstName'),\n                children: [\"First Name \", renderSortingArrow('firstName')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleSort('lastName'),\n                children: [\"Last Name \", renderSortingArrow('lastName')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: employees.sort((a, b) => {\n              const fieldA = a[sortField] || '';\n              const fieldB = b[sortField] || '';\n              const comparison = fieldA.localeCompare(fieldB);\n              return sortOrder === 'asc' ? comparison : -comparison;\n            }).map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.emailId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeListByDepartmentComponent, \"islGk5AqXgguuCozK9g0sMrf0yk=\");\n_c = EmployeeListByDepartmentComponent;\nexport default EmployeeListByDepartmentComponent;\nvar _c;\n$RefreshReg$(_c, \"EmployeeListByDepartmentComponent\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeService","DepartmentService","jsxDEV","_jsxDEV","EmployeeListByDepartmentComponent","_s","selectedDepartment","setSelectedDepartment","departments","setDepartments","employees","setEmployees","sortOrder","setSortOrder","sortField","setSortField","getAllDepartments","then","res","data","catch","error","console","handleDepartmentChange","event","selectedDepartmentId","target","value","getEmployeesByDepartment","handleSort","field","renderSortingArrow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","department","id","name","onClick","sort","a","b","fieldA","fieldB","comparison","localeCompare","employee","firstName","lastName","emailId","_c","$RefreshReg$"],"sources":["/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/components/Department/EmployeeListByDepartmentComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EmployeeService from '../../services/EmployeeService';\nimport DepartmentService from '../../services/DepartmentService';\nimport './EmployeeListByDepartmentComponent.css'; // Import your CSS file\n\nconst EmployeeListByDepartmentComponent = () => {\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortField, setSortField] = useState('firstName');\n\n  useEffect(() => {\n    // Fetch the list of departments\n    DepartmentService.getAllDepartments()\n      .then((res) => {\n        setDepartments(res.data || []);\n      })\n      .catch((error) => {\n        console.error('Error fetching departments:', error);\n        setDepartments([]);\n      });\n  }, []);\n\n  const handleDepartmentChange = (event) => {\n    const selectedDepartmentId = event.target.value;\n    setSelectedDepartment(selectedDepartmentId);\n\n    // Fetch employees based on the selected department\n    EmployeeService.getEmployeesByDepartment(selectedDepartmentId)\n      .then((res) => {\n        setEmployees(res.data || []);\n      })\n      .catch((error) => {\n        console.error('Error fetching employees by department:', error);\n        setEmployees([]);\n      });\n  };\n  const handleSort = (field) => {\n    if (sortField === field) {\n      // If clicking on the same field, toggle the sort order\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      // If clicking on a different field, update the field and set the default sort order to 'asc'\n      setSortField(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const renderSortingArrow = (field) => {\n    if (sortField !== field) {\n      return null; // Don't display the arrow if it's not the current sorting field\n    }\n\n    return sortOrder === 'asc' ? ' ↑' : ' ↓';\n  };\n\n  return (\n    <div className=\"employee-list-container\">\n      <h2>Employee List by Department</h2>\n      <div className=\"department-selector\">\n        <label>Select Department:</label>\n        <select value={selectedDepartment} onChange={handleDepartmentChange}>\n          <option value=\"\">Select Department</option>\n          {departments.map((department) => (\n            <option key={department.id} value={department.id}>\n              {department.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"employee-list-container\">\n      <div className=\"employee-table\">\n        <table className=\"table table-striped table-bordered\">\n          <thead>\n            <tr>\n            <th onClick={() => handleSort('firstName')}>\n                First Name {renderSortingArrow('firstName')}\n              </th>\n              <th onClick={() => handleSort('lastName')}>\n                Last Name {renderSortingArrow('lastName')}\n              </th>\n              <th>Email Id</th>\n            </tr>\n          </thead>\n          <tbody>\n          {employees\n              .sort((a, b) => {\n                const fieldA = a[sortField] || '';\n                const fieldB = b[sortField] || '';\n                const comparison = fieldA.localeCompare(fieldB);\n                return sortOrder === 'asc' ? comparison : -comparison;\n              })\n              .map((employee) => (\n                <tr key={employee.id}>\n                  <td>{employee.firstName}</td>\n                  <td>{employee.lastName}</td>\n                  <td>{employee.emailId}</td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default EmployeeListByDepartmentComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}