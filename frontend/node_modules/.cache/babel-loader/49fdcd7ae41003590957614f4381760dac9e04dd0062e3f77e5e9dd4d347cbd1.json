{"ast":null,"code":"var _class;\nimport axios from 'axios';\nconst BASE_URL = \"http://localhost:8080/api/departments\";\nclass DepartmentService {\n  constructor() {\n    this.createDepartment = async department => {\n      const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(department)\n      });\n      return response.json();\n    };\n    this.updateDepartment = async (id, department) => {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(department)\n      });\n      return response.json();\n    };\n    this.deleteDepartment = async id => {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      return response.json();\n    };\n  }\n  static getInstance() {\n    return this.instance;\n  }\n  getAllDepartments() {\n    return axios.get(BASE_URL);\n  }\n  createDepartment(department) {\n    return axios.post(BASE_URL, department);\n  }\n  getDepartmentById(depId) {\n    return axios.get(BASE_URL + '/' + depId);\n  }\n  updateEmployee(employee, employeeId) {\n    return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n  }\n  deleteEmployee(employeeId) {\n    return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n  }\n}\n_class = DepartmentService;\nDepartmentService.instance = new _class();\nexport default DepartmentService.getInstance();","map":{"version":3,"names":["axios","BASE_URL","DepartmentService","constructor","createDepartment","department","response","fetch","method","headers","body","JSON","stringify","json","updateDepartment","id","deleteDepartment","getInstance","instance","getAllDepartments","get","post","getDepartmentById","depId","updateEmployee","employee","employeeId","put","EMPLOYEE_API_BASE_URL","deleteEmployee","delete","_class"],"sources":["/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/services/DepartmentService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"http://localhost:8080/api/departments\";\n\nclass DepartmentService {\n\n    static instance = new DepartmentService();\n    static getInstance() {\n        return this.instance;\n    }\n    getAllDepartments(){\n        return axios.get(BASE_URL);\n    }\n    \n    createDepartment(department){\n        return axios.post(BASE_URL, department);\n    }\n\n    getDepartmentById(depId){\n        return axios.get(BASE_URL + '/' + depId);\n    }\n    \n    createDepartment = async (department) => {\n        const response = await fetch(BASE_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(department),\n        });\n        return response.json();\n    };\n    \n    updateDepartment = async (id, department) => {\n        const response = await fetch(`${BASE_URL}/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(department),\n        });\n        return response.json();\n    };\n    \n    deleteDepartment = async (id) => {\n        const response = await fetch(`${BASE_URL}/${id}`, {\n            method: 'DELETE',\n        });\n        return response.json();\n    };\n    \n    \n\n    updateEmployee(employee, employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n}\n\nexport default DepartmentService.getInstance();"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,MAAMC,iBAAiB,CAAC;EAAAC,YAAA;IAAA,KAkBpBC,gBAAgB,GAAG,MAAOC,UAAU,IAAK;MACrC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,EAAE;QACnCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACnC,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDC,gBAAgB,GAAG,OAAOC,EAAE,EAAEV,UAAU,KAAK;MACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,IAAGc,EAAG,EAAC,EAAE;QAC9CP,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACnC,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1B,CAAC;IAAA,KAEDG,gBAAgB,GAAG,MAAOD,EAAE,IAAK;MAC7B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,IAAGc,EAAG,EAAC,EAAE;QAC9CP,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,OAAOF,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC1B,CAAC;EAAA;EA1CD,OAAOI,WAAWA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,QAAQ;EACxB;EACAC,iBAAiBA,CAAA,EAAE;IACf,OAAOnB,KAAK,CAACoB,GAAG,CAACnB,QAAQ,CAAC;EAC9B;EAEAG,gBAAgBA,CAACC,UAAU,EAAC;IACxB,OAAOL,KAAK,CAACqB,IAAI,CAACpB,QAAQ,EAAEI,UAAU,CAAC;EAC3C;EAEAiB,iBAAiBA,CAACC,KAAK,EAAC;IACpB,OAAOvB,KAAK,CAACoB,GAAG,CAACnB,QAAQ,GAAG,GAAG,GAAGsB,KAAK,CAAC;EAC5C;EAiCAC,cAAcA,CAACC,QAAQ,EAAEC,UAAU,EAAC;IAChC,OAAO1B,KAAK,CAAC2B,GAAG,CAACC,qBAAqB,GAAG,GAAG,GAAGF,UAAU,EAAED,QAAQ,CAAC;EACxE;EAEAI,cAAcA,CAACH,UAAU,EAAC;IACtB,OAAO1B,KAAK,CAAC8B,MAAM,CAACF,qBAAqB,GAAG,GAAG,GAAGF,UAAU,CAAC;EACjE;AACJ;AAACK,MAAA,GAxDK7B,iBAAiB;AAAjBA,iBAAiB,CAEZgB,QAAQ,GAAG,IAAIhB,MAAiB,CAAC,CAAC;AAwD7C,eAAeA,iBAAiB,CAACe,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}