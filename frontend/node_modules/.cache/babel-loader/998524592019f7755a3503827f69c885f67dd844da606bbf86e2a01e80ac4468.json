{"ast":null,"code":"var _jsxFileName = \"/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/components/Course/CourseList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CourseService from '../../services/CourseService';\nimport DepartmentService from '../../services/DepartmentService';\nimport EmployeeService from '../../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseForm = () => {\n  _s();\n  const [course, setCourse] = useState({\n    courseName: '',\n    departmentId: '',\n    employeeId: ''\n  });\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch departments\n    DepartmentService.getAllDepartments().then(res => {\n      setDepartments(res.data || []);\n    });\n\n    // Fetch employees (initially for the first department)\n    if (departments.length > 0) {\n      fetchEmployeesByDepartment(departments[0].id);\n    }\n  }, []); // Empty dependency array for initial fetch only\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCourse({\n      ...course,\n      [name]: value\n    });\n  };\n  const handleDepartmentChange = e => {\n    const departmentId = e.target.value;\n    setCourse({\n      ...course,\n      departmentId\n    });\n    fetchEmployeesByDepartment(departmentId);\n  };\n  const fetchEmployeesByDepartment = departmentId => {\n    EmployeeService.getEmployeesByDepartment(departmentId).then(res => {\n      setEmployees(res.data || []);\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Perform your form submission logic here\n    // You can use CourseService to create a new course with the selected department and employee\n\n    // Example:\n    // CourseService.createCourse({\n    //   courseName: course.courseName,\n    //   departmentId: course.departmentId,\n    //   employeeId: course.employeeId,\n    // });\n\n    navigate('/courses');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Course Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"courseName\",\n          value: course.courseName,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"departmentId\",\n          value: course.departmentId,\n          onChange: handleDepartmentChange,\n          required: true,\n          children: departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: department.id,\n            children: department.name\n          }, department.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Employee:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"employeeId\",\n          value: course.employeeId,\n          onChange: handleInputChange,\n          required: true,\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: employee.id,\n            children: [employee.firstName, \" \", employee.lastName]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseForm, \"RA84F/Z3tjDu1IbFGP/avkbAIiY=\", false, function () {\n  return [useNavigate];\n});\n_c = CourseForm;\nexport default CourseForm;\nvar _c;\n$RefreshReg$(_c, \"CourseForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CourseService","DepartmentService","EmployeeService","jsxDEV","_jsxDEV","CourseForm","_s","course","setCourse","courseName","departmentId","employeeId","departments","setDepartments","employees","setEmployees","navigate","getAllDepartments","then","res","data","length","fetchEmployeesByDepartment","id","handleInputChange","e","name","value","target","handleDepartmentChange","getEmployeesByDepartment","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","map","department","employee","firstName","lastName","_c","$RefreshReg$"],"sources":["/Users/naveenasomu/Desktop/Final Project/ReactJSApp/reactfrontend/src/components/Course/CourseList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CourseService from '../../services/CourseService';\nimport DepartmentService from '../../services/DepartmentService';\nimport EmployeeService from '../../services/EmployeeService';\n\nconst CourseForm = () => {\n  const [course, setCourse] = useState({\n    courseName: '',\n    departmentId: '',\n    employeeId: '',\n  });\n\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch departments\n    DepartmentService.getAllDepartments().then((res) => {\n      setDepartments(res.data || []);\n    });\n\n    // Fetch employees (initially for the first department)\n    if (departments.length > 0) {\n      fetchEmployeesByDepartment(departments[0].id);\n    }\n  }, []); // Empty dependency array for initial fetch only\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCourse({ ...course, [name]: value });\n  };\n\n  const handleDepartmentChange = (e) => {\n    const departmentId = e.target.value;\n    setCourse({ ...course, departmentId });\n    fetchEmployeesByDepartment(departmentId);\n  };\n\n  const fetchEmployeesByDepartment = (departmentId) => {\n    EmployeeService.getEmployeesByDepartment(departmentId).then((res) => {\n      setEmployees(res.data || []);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Perform your form submission logic here\n    // You can use CourseService to create a new course with the selected department and employee\n\n    // Example:\n    // CourseService.createCourse({\n    //   courseName: course.courseName,\n    //   departmentId: course.departmentId,\n    //   employeeId: course.employeeId,\n    // });\n\n    navigate('/courses');\n  };\n\n  return (\n    <div>\n      <h2>Add Course</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Course Name:</label>\n          <input\n            type=\"text\"\n            name=\"courseName\"\n            value={course.courseName}\n            onChange={handleInputChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Department:</label>\n          <select name=\"departmentId\" value={course.departmentId} onChange={handleDepartmentChange} required>\n            {departments.map((department) => (\n              <option key={department.id} value={department.id}>\n                {department.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label>Employee:</label>\n          <select name=\"employeeId\" value={course.employeeId} onChange={handleInputChange} required>\n            {employees.map((employee) => (\n              <option key={employee.id} value={employee.id}>\n                {employee.firstName} {employee.lastName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CourseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}